<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>283, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA6AkAAAJNU0Z0AUkBTAIBAQMB
        AAEIAQEBCAEBARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARAS
        AED/wAAY/wEAAYABAAH/AQABgAEAIf/AABT/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAHf8M
        AAQBAxQBGwE/AUUBPwF2ATwBagE8AcMBFAF/ARQB8AEXAX8BFwHuAToBbAE6AcYBPwFFAT8BdAMbASYE
        ARwAAhMBFgEaAjQBagF1AiYBugHCAg0B6wHuAg0B6wHuAiUBvQHFAjQBaAFzAhsBIAEmBAFMABT/AQAB
        gAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAHf8IAAQBASEBIgEhATABRAFgAUQBrAEEAYgBBAH9AQAB
        iAEAAf8BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAgGFAQIB/gFDAWIBQwGxAyQBNAQBFAACHwEoAS4C
        LwGgAaoCAgL9AgAC/wIAAv8CAAL/AgAC/wIBAv4CLQGoAbECIgEsATMEAUgAEP8BAAGAAQAB/wEAAYAB
        AAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAGf8IAAMTARoBRAFfAUQBqwEIAYMBCAH6AQAB
        iAEAAf8BAAGIAQAB/wEPAYQBDwH1AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AQYBhgEGAfsBQgFiAUIB
        sgEVARYBFQEdEAACEwEWARoCLwGfAakCBAH5AfoCHgHLAdICFwHcAeACAAL/AgAC/wIQAeUB6QIjAcIB
        yQIDAfoB+wItAakBsgIVARkBHUgADP8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYAB
        AAH/AQABgAEAAf8BAAGAAQAZ/wgAAT8BRQE/AXMBBAGIAQQB/QEAAYgBAAH/AQABiAEAAf8BRQFXAUUB
        mgMTARkBQgFiAUIBsgECAYUBAgH+AQABiAEAAf8BAAGIAQAB/wECAYUBAgH+AUABRgFAAXcQAAI0AWYB
        cQICAv0CFQHeAeICEAESARUCKAE5AUECIQHIAc4CFgHdAeECLQFGAU8DCQELAh4BzAHTAgEC/gI1AWwB
        d0gACP8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAF/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB
        /wEAAYABABX/CAABPQFqAT0BwQEAAYgBAAH/AQABiAEAAf8BRQFZAUUBngMcAScDGwEmAyoBPwEsAXcB
        LAHcAQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/ATkBbQE5AcoQAAIoAbYBvgIAAv8CBQH4AfkCNAFnAXIC
        CgELAQ0CKAE5AUECLQFFAU4DCAEKAjIBWAFiAgoB8QHzAgAC/wIjAcMBykgABP8BAAGAAQAB/wEAAYAB
        AAH/AQABgAEAEf8BAAGAAQAB/wEAAYABAAH/AQABgAEAFf8IAAEdAXwBHQHqAQABiAEAAf8BAAGIAQAB
        /wFBAUgBQQF6AT4BQwE+AXABOQFsATkBxwMUARsBQQFIAUEBewERAYEBEQH0AQABiAEAAf8BAAGIAQAB
        /wETAYEBEwHyEAACEQHkAegCAAL/AgAC/wIQAegB6wI0AWUBcAIHAQgBCQMFAQYCMQFVAV8CFAHgAeQC
        AAL/AgAC/wIKAfAB8kgAIP8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAR/wgAAR4BfQEeAekB
        AAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AUUBWwFFAaEBFQEWARUBHQFEAVwB
        RAGmAQABiAEAAf8BAAGIAQAB/wETAYEBEwHyEAACEwHiAeYCAAL/AgAC/wIWAd0B4QItAUYBTwIGAQcB
        CAIKAQsBDQIoATkBQQIhAcgBzgIAAv8CAAL/AgoB8AHySAAk/wEAAYABAAH/AQABgAEAAf8BAAGAAQAR
        /wgAAT0BagE9AcEBAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/ARwBfgEcAewB
        OgE9AToBZAEhASIBIQEwARcBfwEXAe4BAAGIAQAB/wE5AW0BOQHKEAACKQG1Ab0CAAL/Ag4B6gHtAi0B
        RgFPAwgBCgIyAVgBYgI0AWYBcQIKAQsBDQIoATkBQQIVAd4B4gIAAv8CIwHDAcpIACj/AQABgAEAAf8B
        AAGAAQAB/wEAAYABAA3/CAABPQFCAT0BbgEEAYgBBAH9AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AQAB
        iAEAAf8BAgGFAQIB/gEzAXEBMwHSAUABRwFAAXgBEQGBAREB9AECAYUBAgH+AUABRgFAAXcQAAI0AWIB
        bQICAv0CDQHrAe4CHAEiASgCMgFYAWICFAHgAeQCEAHoAesCNAFnAXICFgEZAR4CFgHdAeECAQL+AjQB
        awF2SAAs/wEAAYABAAH/AQABgAEAAf8BAAGAAQAJ/wgAARkBGgEZASMBRAFfAUQBqwEIAYMBCAH6AQAB
        iAEAAf8BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BQgFiAUIB
        sgEVARYBFQEdEAACGAEdASICLwGfAakCBAH5AfoCCgHwAfICCQHyAfQCAAL/AgAC/wIFAfgB+QIOAeoB
        7QIAAv8CLQGoAbECFQEZAR1IADD/AQABgAEAAf8BAAGAAQAB/wEAAYABAAX/CAAEAQMiATEBQwFgAUMB
        rQEEAYgBBAH9AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAgGFAQIB/gFDAWIBQwGxAyQB
        NAQBFAACHwEoAS4CLwGfAakCAgL9AgAC/wIAAv8CAAL/AgAC/wIBAv4CLQGmAbACIgEsATMEAUgAQP8M
        AAQBAxQBGwE+AUMBPgFwATsBbAE7AcQBFAF/ARQB8AEUAX8BFAHwATkBbAE5AccBPwFFAT8BdAEVARYB
        FQEdBAEcAAITARYBGgI0AWMBbgInAbkBwQINAesB7gIMAewB7wIlAb0BxQI0AWcBcgIVARgBHAQBTABA
        /8AAQP/AAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AwAE/wQABP8EAAHgAQcB
        8AEHBAABwAEDAeABAwQAAcABAwHAAQMEAAHAAQMBwAEDBAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMB
        wAEDBAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMBwAEDBAABwAEDAeABAwQAAeABBwHwAQcEAAT/BAAE
        /wIACw==
</value>
  </data>
</root>