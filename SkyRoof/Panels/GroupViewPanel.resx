<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>283, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAygkAAAJNU0Z0AUkBTAIBAQMB
        AAEQAQEBEAEBARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARAS
        AED/wAAY/wEAAYABAAH/AQABgAEAIf/AABT/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAHf8M
        AAQBAxQBGwFCAUMBQgF2AUkBYwFJAcMBHQF8AR0B8AEhAXwBIQHuAUcBZgFHAcYDQgF0AxsBJgQBHAAD
        EwEaAj8BSwF1AjwBkgHCAhcB2QHuAhcB2QHuAjsBlQHFAj8BSgFzAhsBHAEmBAFMABT/AQABgAEAAf8B
        AAGAAQAB/wEAAYABAAH/AQABgAEAHf8IAAQBAyEBMAFOAVoBTgGsAQYBiAEGAf0BAAGIAQAB/wEAAYgB
        AAH/AQABiAEAAf8BAAGIAQAB/wEDAYMBAwH+AU4BXAFOAbEDJAE0BAEUAAMgAS4CQwF2AaoCBAH6Af0C
        AAL/AgAC/wIAAv8CAAL/AgIB/AH+AkMBfgGxAiMBJAEzBAFIABD/AQABgAEAAf8BAAGAAQAB/wEAAYAB
        AAH/AQABgAEAAf8BAAGAAQAB/wEAAYABABn/CAADEwEaAU4BWgFOAasBDAGAAQwB+gEAAYgBAAH/AQAB
        iAEAAf8BFAGCARQB9QEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wEJAYUBCQH7AUwBXAFMAbIBFQEWARUB
        HRAAAxMBGgJDAXUBqQIIAfIB+gIzAacB0gIoAcAB4AIAAv8CAAL/Ah4BzwHpAjoBnAHJAgYB9AH7AkIB
        fwGyAhUBFgEdSAAM/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAB
        /wEAAYABABn/CAABQQFCAUEBcwEGAYgBBgH9AQABiAEAAf8BAAGIAQAB/wFMAVMBTAGaAxMBGQFMAVwB
        TAGyAQMBgwEDAf4BAAGIAQAB/wEAAYgBAAH/AQMBgwEDAf4BQwFEAUMBdxAAAj4BSAFxAgQB+gH9AiYB
        xAHiAxABFQIrASwBQQI3AaQBzgInAcEB4QIyATQBTwMJAQsCMgGqAdMCAgH8Af4CQAFMAXdIAAj/AQAB
        gAEAAf8BAAGAAQAB/wEAAYABAAH/AQABgAEABf8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAV
        /wgAAUkBYgFJAcEBAAGIAQAB/wEAAYgBAAH/AUwBVAFMAZ4DHAEnAxsBJgMqAT8BOgFyAToB3AEAAYgB
        AAH/AQABiAEAAf8BAAGIAQAB/wFGAWcBRgHKEAACPwGOAb4CAAL/AgoB8AH5Aj8BSQFyAwoBDQIrASwB
        QQIxATMBTgMIAQoCOQE/AWICEwHlAfMCAAL/AjkBnQHKSAAE/wEAAYABAAH/AQABgAEAAf8BAAGAAQAR
        /wEAAYABAAH/AQABgAEAAf8BAAGAAQAV/wgAASgBeAEoAeoBAAGIAQAB/wEAAYgBAAH/AUMBRQFDAXoB
        QAFBAUABcAFGAWUBRgHHAxQBGwFEAUUBRAF7ARcBfQEXAfQBAAGIAQAB/wEAAYgBAAH/ARsBfQEbAfIQ
        AAIfAc4B6AIAAv8CAAL/Ah0B1QHrAj4BRwFwAwcBCQMFAQYCOAE9AV8CJAHGAeQCAAL/AgAC/wITAeMB
        8kgAIP8BAAGAAQAB/wEAAYABAAH/AQABgAEAAf8BAAGAAQAR/wgAASgBeAEoAekBAAGIAQAB/wEAAYgB
        AAH/AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AU0BVQFNAaEBFQEWARUBHQFNAVcBTQGmAQABiAEAAf8B
        AAGIAQAB/wEbAX0BGwHyEAACIQHLAeYCAAL/AgAC/wInAcEB4QIyATQBTwMGAQgDCgENAisBLAFBAjcB
        pAHOAgAC/wIAAv8CEwHjAfJIACT/AQABgAEAAf8BAAGAAQAB/wEAAYABABH/CAABSQFiAUkBwQEAAYgB
        AAH/AQABiAEAAf8BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BJwF7AScB7AE7ATwBOwFkAyEBMAEhAXwB
        IQHuAQABiAEAAf8BRgFnAUYByhAAAj8BiwG9AgAC/wIZAdgB7QIyATQBTwMIAQoCOQE/AWICPgFIAXED
        CgENAisBLAFBAiYBxAHiAgAC/wI5AZ0BykgAKP8BAAGAAQAB/wEAAYABAAH/AQABgAEADf8IAAE/AUAB
        PwFuAQYBiAEGAf0BAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wEDAYMBAwH+AUABagFAAdIB
        QwFEAUMBeAEXAX0BFwH0AQMBgwEDAf4BQwFEAUMBdxAAAj0BRgFtAgQB+gH9AhcB2QHuAx0BKAI5AT8B
        YgIkAcYB5AIdAdUB6wI/AUkBcgMWAR4CJwHBAeECAgH8Af4CPwFLAXZIACz/AQABgAEAAf8BAAGAAQAB
        /wEAAYABAAn/CAABGQEaARkBIwFOAVoBTgGrAQwBgAEMAfoBAAGIAQAB/wEAAYgBAAH/AQABiAEAAf8B
        AAGIAQAB/wEAAYgBAAH/AQABiAEAAf8BAAGIAQAB/wFMAVwBTAGyARUBFgEVAR0QAAMZASICQwF1AakC
        CAHyAfoCEwHjAfICEQHnAfQCAAL/AgAC/wIKAfAB+QIZAdgB7QIAAv8CQwF+AbECFQEWAR1IADD/AQAB
        gAEAAf8BAAGAAQAB/wEAAYABAAX/CAAEAQMiATEBTQFaAU0BrQEGAYgBBgH9AQABiAEAAf8BAAGIAQAB
        /wEAAYgBAAH/AQABiAEAAf8BAwGDAQMB/gFOAVwBTgGxAyQBNAQBFAADIAEuAkMBdQGpAgQB+gH9AgAC
        /wIAAv8CAAL/AgAC/wICAfwB/gJCAXwBsAIjASQBMwQBSABA/wwABAEDFAEbAUABQQFAAXABSAFlAUgB
        xAEdAXwBHQHwAR0BfAEdAfABRgFlAUYBxwNCAXQBFQEWARUBHQQBHAADEwEaAj0BRgFuAj0BkAHBAhcB
        2QHuAhYB2gHvAjsBlQHFAj8BSQFyAxUBHAQBTABA/8AAQP/AAAFCAU0BPgcAAT4DAAEoAwABQAMAARAD
        AAEBAQABAQUAAYAXAAP/AwAE/wQABP8EAAHgAQcB8AEHBAABwAEDAeABAwQAAcABAwHAAQMEAAHAAQMB
        wAEDBAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMBwAEDBAABwAEDAcABAwQAAcABAwHAAQMEAAHAAQMB
        wAEDBAABwAEDAeABAwQAAeABBwHwAQcEAAT/BAAE/wIACw==
</value>
  </data>
</root>